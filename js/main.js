!function e(i,l,s){function n(t,d){if(!l[t]){if(!i[t]){var o="function"==typeof require&&require;if(!d&&o)return o(t,!0);if(a)return a(t,!0);var r=new Error("Cannot find module '"+t+"'");throw r.code="MODULE_NOT_FOUND",r}var c=l[t]={exports:{}};i[t][0].call(c.exports,function(e){var l=i[t][1][e];return n(l?l:e)},c,c.exports,e,i,l,s)}return l[t].exports}for(var a="function"==typeof require&&require,t=0;t<s.length;t++)n(s[t]);return n}({1:[function(e,i,l){"use strict";var s=e("./weeks");$(window).ready(function(){function e(e){var i=e?moment().week(e):moment(),l=i.isoWeekday(1).format("DD"),s=i.isoWeekday(7).format("DD"),n=i.format("MM");$(".item-week").html("Week "+l+"-"+s+"."+n)}var i=void 0;$(".on-btn").click(function(){if("none"==(i=document.getElementById("box").style.display)){document.getElementById("box").style.display="block",$(".flexslider").flexslider({animation:"slide",slideshow:!1,controlNav:!1,controlsContainer:$(".custom-controls-container"),customDirectionNav:$(".custom-navigation a"),keyboard:!1,animationLoop:!0,after:function(e){e.currentSlide==e.last&&((0,s.addLastWeekSlide)($(".flexslider")),console.log("last transition ended"))}});var e=moment().isoWeekday(),l=void 0;switch(e){case 1:l=".monday";break;case 2:l=".tuesday";break;case 3:l=".wednesday";break;case 4:l=".thursday";break;case 5:l=".friday";break;case 6:l=".saturday";break;case 7:l=".sunday"}(0,s.initSlider)($(".flex-active-slide").find(l))}else"block"==i&&(document.getElementById("box").style.display="none")}),$(".close-button").click(function(){document.getElementById("box").style.display="none"}),$(".switch-on").click(s.daytimeSliderChanges),$(".switch-off").click(s.daytimeSliderChanges);var l=moment().week(),n=moment().week();e(n),n==l?($(".flex-prev").hide(),$(".flex-prev-block").show()):($(".flex-prev-block").hide(),$(".flex-prev").show()),$(".flex-next").click(function(){$(".flex-prev").show(),$(".flex-prev-block").hide(),n==l?n=l+1:n==a?n=a+1:n+=1,e(n)});var a,t=n;$(".flex-prev").click(function(){if(n==l)return!1;n-=1,t=n,t==l?($(".flex-prev").hide(),$(".flex-prev-block").show()):($(".flex-prev").show(),$(".flex-prev-block").hide()),e(n),a=n}),$(".add-button").click(function(){(0,s.addHandle)()});var d=null;$(".del-button").mousedown(function(){console.log("delete"),console.log($(":focus")),d=$(":focus").hasClass("ui-slider-handle")?$(":focus"):null}),$(".del-button").click(function(){d&&(0,s.deleteHandle)(d)})})},{"./weeks":2}],2:[function(e,i,l){"use strict";function s(e){if(Array.isArray(e)){for(var i=0,l=Array(e.length);i<e.length;i++)l[i]=e[i];return l}return Array.from(e)}function n(e,i){return i&&(console.log("filtering...",e),e=e.filter(function(e){return e<=14&&e>=4})),console.log(e),e}function a(e){var i=23-(moment().hour()+1);return e&&(i<4?i=4:i>14&&(i=14)),i}function t(e,i){i=i?n(i,m):[a(m)],e.slider({orientation:"vertical",min:m?4:0,max:m?14:23,values:i,step:1,animate:!0,start:function(e,i){var l=23-i.value;f.text(l),f.show(),f.css("top",i.handle.getBoundingClientRect().top-10),f.css("left",i.handle.getBoundingClientRect().left+30)},slide:function(e,i){var l=this.getBoundingClientRect();if(!(e.pageX<l.right&&e.pageX>l.left&&e.pageY<l.bottom&&e.pageY>l.top))return!1;var s=[];console.log(i.values);for(var n=0;n<i.values.length;n++){if(s.indexOf(i.values[n])>-1)return!1;s.push(i.values[n])}var a=23-i.value;f.text(a),f.css("top",i.handle.getBoundingClientRect().top-10),f.css("left",i.handle.getBoundingClientRect().left+30),$(".contentSlider").html(a+" hour")},stop:function(){f.hide()}}),console.log("VALUES",i),0==i.length?e.removeClass("active-slider"):e.addClass("active-slider"),d()}function d(){$(".ui-slider-handle").off("mousedown"),$(".ui-slider-handle").on("dragstart",function(e){e.preventDefault()}),$(".ui-slider-handle").on("mousedown",function(e){function i(e){var i=l.getBoundingClientRect();e.pageX<i.right&&e.pageX>i.left&&e.pageY<i.bottom&&e.pageY>i.top?s.css("display","none"):(s.css("display","initial"),s.css("left",e.pageX-s.width()/2),s.css("top",e.pageY-s.height()/2))}console.log("mousedown",this);var l=$(this).parent()[0];console.log(l);var s=$(this).clone();s.css("position","absolute"),s.css("width","25px").css("height","9px").css("left","0").css("top",0).css("opacity",.5),$("body").append(s),$("body").mousemove(function(e){console.log("mousemove"),i(e)}),$("body").mouseup(function(){console.log("mouseup"),$("body").off("mouseup"),$("body").off("mousemove"),s.remove()})})}function o(){return $(".flexslider .slides .item:not(.clone)")}function r(e){var i=e.data("flexslider"),l=$('<li class="item">\n                                <div class="item-week">\n                                </div>\n                                <div class="scale-wrapper">\n                                    <ul class="list-scale-wrap">\n                                        <li class="times-wrap-left">\n                                            <div class="time-min">00</div>\n                                            <div class="time-max">24</div>\n                                        </li>\n                                        <li class="scale-item">\n                                            <div class="day">Mon</div>\n                                            <div class="add-times-left">\n                                                <div class="default-wrap">\n                                                    <div class="monday default-slider slide-active"></div>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li class="scale-item">\n                                            <div class="day">Tue</div>\n                                            <div class="default-wrap">\n                                                <div class="default-slider  tuesday"></div>\n                                            </div>\n                                        </li>\n                                        <li class="scale-item">\n                                            <div class="day">Wed</div>\n                                            <div class="default-wrap">\n                                                <div class="default-slider wednesday"></div>\n                                            </div>\n                                        </li>\n                                        <li class="scale-item">\n                                            <div class="day">Th</div>\n                                            <div></div>\n                                            <div class="default-wrap">\n                                                <div class="default-slider thursday"></div>\n                                            </div>\n                                        </li>\n                                        <li class="scale-item">\n                                            <div class="day">Fr</div>\n                                            <div class="default-wrap">\n                                                <div class="default-slider  friday"></div>\n                                            </div>\n                                        </li>\n                                        <li class="scale-item">\n                                            <div class="day">Sat</div>\n                                            <div class="default-wrap">\n                                                <div class="default-slider  saturday"></div>\n                                            </div>\n                                        </li>\n                                        <li class="scale-item">\n                                            <div class="day">Sun</div>\n                                            <div class="add-times-right">\n                                                <div class="default-wrap">\n                                                    <div class="default-slider  sunday"></div>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li class="times-wrap-right">\n                                            <div class="time-min">00</div>\n                                            <div class="time-max">24</div>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </li>');i.addSlide(l)}function c(){m?($(".switch-on").removeClass("active"),$(".switch-off").addClass("active"),$(".default-wrap").addClass("slide-wrap"),$(".default-slider").addClass("slider"),$(".slider").removeClass("default-slider"),$(".slider").slider({min:0,max:23}),m=!1):0==m&&($(".switch-off").removeClass("active"),$(".switch-on").addClass("active"),$(".slide-wrap").addClass("default-wrap"),$(".default-wrap").removeClass("slide-wrap"),$(".slider").addClass("default-slider"),$(".default-slider").removeClass("slider"),m=!0,$(".default-slider.active-slider").each(function(e,i){var l=$(i).slider("values");$(i).slider("destroy"),t($(i),l)})),console.log($(".flex-active-slide .active-slider").slider("values"))}function u(){var e=$(".flex-active-slide"),i=e.find(".monday"),l=[];if(l=m?[4,5,6,7,8,9,10,11,12,13,14]:[].concat(s(new Array(24).keys())),i.hasClass("active-slider")){var n=i.slider("value"),a=i.slider("values");console.log(n,a);var d=a[a.length-1]-1;if(a.indexOf(d)===-1&&l.indexOf(d)!==-1)a.push(a[a.length-1]-1);else{l=l.filter(function(e){return a.indexOf(e)==-1});var o=l.randomElement();void 0!=o&&a.push(o),console.log(a)}i.slider("destroy"),t(i,a)}else t(i),i.addClass("active-slider");i.find(".ui-slider-handle:last").focus()}function v(e){console.log(e);var i=e.parent(),l=i.find(".ui-slider-handle").index(e),s=i.slider("values");console.log("old values",s),console.log(l),s.splice(l,1),console.log("new values",s),i.slider("destroy"),t(i,s)}Object.defineProperty(l,"__esModule",{value:!0}),l.initSlider=t,l.getItems=o,l.addLastWeekSlide=r,l.daytimeSliderChanges=c,l.addHandle=u,l.deleteHandle=v,Array.prototype.randomElement=function(){return this[Math.floor(Math.random()*this.length)]};var f;$(window).ready(function(){$("body").append('<div id="slider-popup"></div>'),f=$("#slider-popup")});var m=!0},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
