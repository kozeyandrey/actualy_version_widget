!function e(i,s,l){function a(n,t){if(!s[n]){if(!i[n]){var r="function"==typeof require&&require;if(!t&&r)return r(n,!0);if(d)return d(n,!0);var c=new Error("Cannot find module '"+n+"'");throw c.code="MODULE_NOT_FOUND",c}var o=s[n]={exports:{}};i[n][0].call(o.exports,function(e){var s=i[n][1][e];return a(s?s:e)},o,o.exports,e,i,s,l)}return s[n].exports}for(var d="function"==typeof require&&require,n=0;n<l.length;n++)a(l[n]);return a}({1:[function(e,i,s){"use strict";var l=e("./weeks");$(window).ready(function(){function e(e){var i=e?moment().week(e):moment(),s=i.isoWeekday(1).format("DD"),l=i.isoWeekday(7).format("DD"),a=i.format("MM");$(".item-week").html("Week "+s+"-"+l+"."+a)}$("body").append('<div id="slider-popup"></div>');var i=$("#slider-popup"),s=void 0;$(".on-btn").click(function(){if("none"==(s=document.getElementById("box").style.display)){document.getElementById("box").style.display="block",$(".flexslider").flexslider({animation:"slide",slideshow:!1,controlNav:!1,controlsContainer:$(".custom-controls-container"),customDirectionNav:$(".custom-navigation a"),keyboard:!1,animationLoop:!0,after:function(e){e.currentSlide==e.last&&((0,l.addLastWeekSlide)($(".flexslider")),console.log("last transition ended"))}});var e=moment().isoWeekday(),a=void 0;switch(e){case 1:a=".monday";break;case 2:a=".tuesday";break;case 3:a=".wednesday";break;case 4:a=".thursday";break;case 5:a=".friday";break;case 6:a=".saturday";break;case 7:a=".sunday"}(0,l.initSlider)($(".flex-active-slide").find(a),i),$(".flex-active-slide").find(a).addClass("active-slider")}else"block"==s&&(document.getElementById("box").style.display="none")}),$(".close-button").click(function(){document.getElementById("box").style.display="none"}),$(".switch-on").click(l.daytimeSliderChanges),$(".switch-off").click(l.daytimeSliderChanges);var a=moment().week(),d=moment().week();e(d),d==a?($(".flex-prev").hide(),$(".flex-prev-block").show()):($(".flex-prev-block").hide(),$(".flex-prev").show()),$(".flex-next").click(function(){$(".flex-prev").show(),$(".flex-prev-block").hide(),d==a?d=a+1:d==n?d=n+1:d+=1,e(d)});var n,t=d;$(".flex-prev").click(function(){if(d==a)return!1;d-=1,t=d,t==a?($(".flex-prev").hide(),$(".flex-prev-block").show()):($(".flex-prev").show(),$(".flex-prev-block").hide()),e(d),n=d}),$(".add-button").click(function(){var e=$(".flex-active-slide"),s=e.find(".monday");if(s.hasClass("active-slider")){var a=s.slider("value"),d=s.slider("values");console.log(a,d),d.push(d[d.length-1]-1),s.slider("destroy"),(0,l.initSlider)(s,i,d)}else console.log("doesnt"),(0,l.initSlider)(s,i),s.addClass("active-slider")})})},{"./weeks":2}],2:[function(e,i,s){"use strict";function l(e,i,s){console.log(e,t),e.slider({orientation:"vertical",min:t?4:0,max:t?14:23,values:s?s:[23-(moment().hour()+1)],step:1,animate:!0,start:function(e,s){var l=23-s.value;i.text(l),i.show(),i.css("top",s.handle.getBoundingClientRect().top-10),i.css("left",s.handle.getBoundingClientRect().left+30)},slide:function(e,s){var l=[];console.log(s.values);for(var a=0;a<s.values.length;a++){if(l.indexOf(s.values[a])>-1)return!1;l.push(s.values[a])}var d=23-s.value;i.text(d),i.css("top",s.handle.getBoundingClientRect().top-10),i.css("left",s.handle.getBoundingClientRect().left+30),$(".contentSlider").html(d+" hour")},stop:function(){i.hide()}})}function a(){return $(".flexslider .slides .item:not(.clone)")}function d(e){var i=e.data("flexslider"),s=$('<li class="item">\n                                new\n                                <div class="item-week">\n                                </div>\n                                <div class="scale-wrapper">\n                                    <ul class="list-scale-wrap">\n                                        <li class="times-wrap-left">\n                                            <div class="time-min">00</div>\n                                            <div class="time-max">24</div>\n                                        </li>\n                                        <li class="scale-item">\n                                            <div class="day">Mon</div>\n                                            <div class="add-times-left">\n                                                <div class="default-wrap">\n                                                    <div class="monday default-slider slide-active"></div>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li class="scale-item">\n                                            <div class="day">Tue</div>\n                                            <div class="default-wrap">\n                                                <div class="default-slider  tuesday"></div>\n                                            </div>\n                                        </li>\n                                        <li class="scale-item">\n                                            <div class="day">Wed</div>\n                                            <div class="default-wrap">\n                                                <div class="default-slider wednesday"></div>\n                                            </div>\n                                        </li>\n                                        <li class="scale-item">\n                                            <div class="day">Th</div>\n                                            <div></div>\n                                            <div class="default-wrap">\n                                                <div class="default-slider thursday"></div>\n                                            </div>\n                                        </li>\n                                        <li class="scale-item">\n                                            <div class="day">Fr</div>\n                                            <div class="default-wrap">\n                                                <div class="default-slider  friday"></div>\n                                            </div>\n                                        </li>\n                                        <li class="scale-item">\n                                            <div class="day">Sat</div>\n                                            <div class="default-wrap">\n                                                <div class="default-slider  saturday"></div>\n                                            </div>\n                                        </li>\n                                        <li class="scale-item">\n                                            <div class="day">Sun</div>\n                                            <div class="add-times-right">\n                                                <div class="default-wrap">\n                                                    <div class="default-slider  sunday"></div>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li class="times-wrap-right">\n                                            <div class="time-min">00</div>\n                                            <div class="time-max">24</div>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </li>');i.addSlide(s)}function n(){t?($(".switch-on").removeClass("active"),$(".switch-off").addClass("active"),$(".default-wrap").addClass("slide-wrap"),$(".default-slider").addClass("slider"),$(".slider").removeClass("default-slider"),$(".slider").slider({min:0,max:23}),t=!1):0==t&&($(".switch-off").removeClass("active"),$(".switch-on").addClass("active"),$(".slide-wrap").addClass("default-wrap"),$(".default-wrap").removeClass("slide-wrap"),$(".slider").addClass("default-slider"),$(".default-slider").removeClass("slider"),$(".default-slider").slider({min:4,max:14}),t=!0)}Object.defineProperty(s,"__esModule",{value:!0}),s.initSlider=l,s.getItems=a,s.addLastWeekSlide=d,s.daytimeSliderChanges=n;var t=!0},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
